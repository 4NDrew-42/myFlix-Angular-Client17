
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$myFlix-Angular-Client-primary: mat.define-palette(mat.$indigo-palette);
$myFlix-Angular-Client-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$myFlix-Angular-Client-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$myFlix-Angular-Client-theme: mat.define-light-theme((
  color: (
    primary: $myFlix-Angular-Client-primary,
    accent: $myFlix-Angular-Client-accent,
    warn: $myFlix-Angular-Client-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($myFlix-Angular-Client-theme);

// Import Angular Material theming functions once
@use "@angular/material" as mat;

// Define the color palettes
$myFlix-Angular-Client-primary: mat.define-palette(mat.$indigo-palette);
$myFlix-Angular-Client-accent: mat.define-palette(
  mat.$pink-palette,
  A200,
  A100,
  A400
);
$myFlix-Angular-Client-warn: mat.define-palette(mat.$red-palette);

// Create the theme object
$myFlix-Angular-Client-theme: mat.define-light-theme(
  (
    color: (
      primary: $myFlix-Angular-Client-primary,
      accent: $myFlix-Angular-Client-accent,
      warn: $myFlix-Angular-Client-warn,
    ),
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Include only once the common styles and all-component themes
@include mat.core();
@include mat.all-component-themes($myFlix-Angular-Client-theme);

// Global style settings
html,
body {
  height: 100%;
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

// Custom global styles
// Add any other global styles here, ensuring they are needed globally and not duplicated elsewhere

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
